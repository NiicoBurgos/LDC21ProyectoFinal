;////////////////////////////////////////////////////////////
;SECCION DE CONVERSION DE NUMERO A CADENA O VICEVERSA
;////////////////////////////////////////////////////////////

;Convertir cadena a numero
CADNUM macro num 
local multi,finconv 
        push ax
        push bx
		push si
		mov num,0
		LONGITUD cadena,long
		mov si,long 
	    dec si			
        mov bx,1 
multi: 
		sub ax,ax
        mov al,cadena[si]    
		sub al,48		
        mul bx      
        add num,ax
        mov ax,bx
        mov bx,10
		mul bx
        mov bx,ax  
        cmp si,0
        je finconv   
        dec si  
        jmp multi                  
finconv:
		pop si
		pop bx
        pop ax    
endm


;Convertir un numero a una cadena
NUMCAD macro num,cad
local dividir
        push ax
        push bx
        push si 
		push dx		
        sub si,si   
        mov ax,num
        mov bx,10            
dividir:
		sub dx,dx
		div bx                               
        add dl,48
        mov cad[si],dl
        inc si 
        cmp ax,0
        jne dividir 
		mov cad[si],'$'
        pop dx
 	    pop si
        pop bx
        pop ax
endm

;////////////////////////////////////////////////////////////
;SECCION ESCRIBIR EN PANTALLA
;////////////////////////////////////////////////////////////

;Escribir texto por pantalla
ESCRIBE macro palabra
		push dx
		lea dx,palabra
		call escribir
		pop dx
endm


;////////////////////////////////////////////////////////////
;SECCION PARA LEER DATOS DEL USUARIO POR TECLADO
;////////////////////////////////////////////////////////////

;Leer exclusivamente un numero
LEENUM macro cad,longi   
local inicio,ingreso,intro,errorIngreso,fingreso
        push ax
		push bx
        mov ah,01 
inicio:  
		ESCRIBE ingresoNumero
		sub si,si            
ingreso:
		sub al,al
		cmp si,longi
        je fingreso
        int 21h   
        cmp al,13
        je intro   
        cmp al,48
        jl errorIngreso 
        cmp al,57
        jg errorIngreso            
        mov cad[si],al
        inc si
        jmp ingreso
intro:
		cmp si,0
		je inicio
		jmp fingreso
errorIngreso:
		ESCRIBE sonido
		ESCRIBE ingresoErroneo
		jmp inicio
fingreso:
		mov cad[si],'$'
		ESCRIBE ingresoExitoso	
		ESCRIBE espacioBlanco
        pop bx
		pop ax
endm


;Verificar opcion del menu
LEEROPCION macro opc
local volver,errorOpc,correcto
		push ax
volver:			
		ESCRIBE elegirOpcion	
;Controlo que la opcion ingresada sea un numero entre 1 y 4
		mov ah,01
		int 21h
		cmp al,49
		jl errorOpc
		cmp al,52
		jg errorOpc
		jmp correcto
errorOpc:	
		ESCRIBE sonido
		ESCRIBE errorOpcion
		jmp volver
correcto:
		sub al,48	
		mov opc,al				
		pop ax
endm	


;////////////////////////////////////////////////////////////
;SECCION DEL CODIGO DE LAS OPCIONES
;////////////////////////////////////////////////////////////

;Realizar la opcion 1
OPCION1 macro 	
		mov habilitar,1
		LEENUM cadena,4
		LONGITUD cadena,long
		CADNUM numero		
		mov habilitar,2
endm


;Realizar la opcion 2
OPCION2 macro 
local seguir,finadvertencia	
;verifico que se haya realizado la opcion 1		
		cmp habilitar,2
		jge seguir
		ESCRIBE sonido
		ESCRIBE advertirOpc1
		jmp finadvertencia
seguir:	
		FACTORES numero,aux
;habilito la opcion3
		mov habilitar,3
finadvertencia:	
		ESCRIBE espacioBlanco
endm


;Realizar la opcion 3
OPCION3 macro 
local seguir,cero,uno,finadvertencia	
		push ax
		push bx
		push dx

;Verifico que se haya realizado la opcion 2
		cmp habilitar,3
		je seguir
		ESCRIBE sonido
		ESCRIBE advertirOpc2
		jmp finadvertencia		
seguir:
;caso especial 0
		cmp numero,0
		je cero
;caso especial 1		
		cmp numero,1
		je uno
;analisis para el resto de numeros		
		ESCRIBE divisoresDe
		NUMCAD numero,auxcad
		INVERSA auxcad
		ESCRIBE auxcad
		ESCRIBE excluirPrimos	
		DIVISORES numero,aux
		jmp finadvertencia
cero:
		ESCRIBE ceroDivisor
		jmp finadvertencia
uno:
		ESCRIBE unoDivisor
finadvertencia:	
		ESCRIBE espacioBlanco
		pop dx
		pop bx
		pop ax
endm


;realizar la opcion 4
OPCION4 macro
		ESCRIBE espacioBlanco
		ESCRIBE finPrograma
endm


;////////////////////////////////////////////////////////////
;SECCION DE UTILIDADES
;////////////////////////////////////////////////////////////

;realiza el calculo de los divisores de un numero
DIVISORES macro num,divisor
local dividir,continuar,numprimo,fin
		push ax
		push bx
		push dx
		
		mov ax,num
		mov bx,1
		mov divisor,bx		
;se muestra el 1 que es divisor universal de todos los numeros		
		NUMCAD divisor,auxcad
		INVERSA auxcad
		ESCRIBE auxcad
;como ya se evalu√≥ si era primo en la opcion 2 comparo la variable primo para evitar volver a recorrer el numero
		cmp primo,1
		je numprimo		
dividir:
		sub dx,dx
		mov ax,num		
		div bx                               
		cmp dx,0
		jne continuar
		mov divisor,bx
        ESPRIMO divisor
        cmp primo,1
        je continuar
		ESCRIBE coma
		NUMCAD divisor,auxcad
		INVERSA auxcad
		ESCRIBE auxcad		
continuar:	
        inc bx
        cmp bx,mitad
        jle dividir		
		ESCRIBE coma
		NUMCAD num,auxcad
		INVERSA auxcad
		ESCRIBE auxcad
		mov primo, 0
		jmp fin
numprimo:	
		ESCRIBE esNumeroPrimo
fin:		
		pop dx
		pop bx
		pop ax
endm

;Verificar si un numero es primos
ESPRIMO macro num 
local repetir,prim,noprim,terminar
        push ax
        push bx
        push dx 
        mov bx,num
        dec bx
repetir:
        sub dx,dx       
        mov ax,num
        dec bx
        cmp bx,1
        jle prim
        div bx
        cmp dx,0
        je noprim
        jmp repetir
prim:    
;= 1 es primo
        mov primo,1
        jmp terminar
noprim:     
;= 0 no es primo
        mov primo,0
terminar:                 
        pop dx
        pop bx
        pop ax
endm  


;Obtener factores primos
FACTORES macro num,auxprim  
local reset,mientras,saltar,nodivisor,numprimo,cero,fin   
        push ax
        push bx 
        push dx
		
		cmp num,0
		je cero
        mov acc,1
        mov bx,2  
		mov auxcoma,0
		sub dx,dx		
		mov ax,num
		div bx
		mov mitad,ax		
		ESCRIBE factoresPrimos
		NUMCAD num,auxcad
        INVERSA auxcad
        ESCRIBE auxcad
		ESCRIBE dospuntos
		cmp numero,1
		je numprimo
reset:	
        sub dl,dl	
        mov ax,num		
        cmp bx,mitad
        jg numprimo	
mientras: 
        mov dx,acc
        cmp num,dx
        je fin 
        sub dx,dx       
        div bx
        cmp dx,0
        jne nodivisor 
        mov auxprim,bx  
        ESPRIMO aux
        cmp primo,1
        jne nodivisor        
        cmp auxcoma,0
		je saltar
		ESCRIBE coma 
		mov primo,0		
saltar:   
        mov auxax,ax
        mov ax,acc
        mul bx
        NUMCAD auxprim,auxcad
        INVERSA auxcad
        ESCRIBE auxcad
        mov acc,ax
        inc auxcoma  
        mov ax,auxax
		sub dx,dx
        jmp mientras         
nodivisor:
        inc bx
        jmp reset    
numprimo:
		mov primo,1
		NUMCAD num,auxcad
		INVERSA auxcad
		ESCRIBE auxcad
		ESCRIBE esNumeroPrimo
		jmp fin
cero:
		ESCRIBE ceroPrimo
fin:     
		pop dx
        pop bx
        pop ax
endm


;Invertir cadena
INVERSA macro cad 
local salto,fin     
		push ax 
	    push di
	    push si   
	    LONGITUD cad,long 
	    mov di,long
	    dec di
	    sub si,si 
salto:
	    cmp di,si
	    jle fin 
	    mov al,cad[si]    
	    mov ah,cad[di] 
	    mov cad[si],ah 
	    mov cad[di],al
	    inc si
	    dec di
	    jmp salto
fin:       		
	    pop si
	    pop di
	    pop ax 
endm 


;Calcular longitud de una cadena
LONGITUD macro cad,var
local comp,fin
		push ax
		push si
		
		sub si,si
comp:    
		mov al,cad[si]
		cmp al,'$'
		je fin
		inc si 
		jmp comp
fin:
		mov var,si
		
		pop si
		pop ax     
endm   